!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},r=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),o.textContent=""},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)};var s=e+"80804e27ce061efd1ffb.svg",a=e+"2fc47fd8e9a9bcd9612f.jpg",c=e+"3f562ce83766a824571e.svg",l=e+"975792ea68af0a3c209d.svg";function i(e,t){const r=e.submitter,o=r.textContent,n=`${o.substring(0,o.length-1)}ing...`;return r.textContent=t?n:o}const d=document.getElementById("image-logo"),u=document.getElementById("image-avatar"),m=document.getElementById("image-pencil_icon"),_=document.getElementById("image-plus_icon");d.src=s,u.src=a,m.src=c,_.src=l;const f=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}postNewCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c9851f90-cf8f-4cb2-ba1b-6a2d14bb1b1d","Content-Type":"application/json"}});let h,y;f.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{const t=g(e);q.append(t)})),I.textContent=r.name,P.textContent=r.about,w.src=r.avatar})).catch(console.error);const v=document.querySelector("#delete-modal");v.querySelector(".modal__form").addEventListener("submit",(function(e){f.deleteCard(y).then((()=>{})).catch(console.error).finally((()=>{i(e,!0),setTimeout((()=>{e.submitter.textContent="Delete"}),1e3)})),e.target.reset(),e.preventDefault(),h.remove(),x(v)}));const b=document.querySelector("#preview-modal"),p=(b.querySelector(".modal__close-btn"),b.querySelector(".modal__image")),S=b.querySelector(".modal__caption"),E=document.querySelector("#post-template"),q=document.querySelector(".posts__list");function g(e){const t=E.content.querySelector(".post").cloneNode(!0),r=t.querySelector(".post__image"),o=t.querySelector(".post__text");r.src=e.link,o.textContent=e.name,r.alt=e.name;const n=t.querySelector(".post__like-btn");return e.isLiked&&n.classList.toggle("post__like-btn_clicked"),n.addEventListener("click",(function(){const t=!!n.classList.contains("post__like-btn_clicked");f.changeLikeStatus(e._id,t).then((()=>{n.classList.toggle("post__like-btn_clicked")})).catch(console.error)})),t.querySelector(".post__delete-btn").addEventListener("click",(r=>{!function(e,t){h=e,y=t._id,$(v)}(t,e)})),r.addEventListener("click",(()=>{$(b),p.src=r.src,p.alt=r.alt,S.textContent=o.textContent})),t}document.querySelectorAll(".modal__submit-btn");const k=document.querySelector(".main"),C=[...document.querySelectorAll(".modal")],L=document.querySelectorAll(".modal__close-btn");function $(e){e.classList.remove("modal_closed"),document.addEventListener("keydown",j)}function x(e){e.classList.add("modal_closed"),document.removeEventListener("keydown",j)}function j(e){C.forEach((t=>{"Escape"===e.key&&x(t)}))}C.forEach((e=>{e.addEventListener("click",(t=>{t.target.classList.contains("modal")&&x(e)}))})),L.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>x(t)))}));const U=document.querySelector("#edit-modal"),A=document.querySelector(".profile__edit-btn"),I=(U.querySelector(".modal__close-btn"),k.querySelector(".profile__name")),P=k.querySelector(".profile__description"),T=U.querySelector("#profile-name-input"),B=U.querySelector("#profile-description-input"),D=U.querySelector(".modal__form"),w=document.querySelector(".profile__image"),N=document.querySelector(".profile__avatar-btn"),O=document.querySelector("#avatar-modal"),J=O.querySelector(".modal__form"),H=O.querySelector("#edit-avatar-input");var z;N.addEventListener("click",(()=>{$(O)})),J.addEventListener("submit",(e=>{!function(e){f.editAvatar(H.value).then((e=>{u.src=e.avatar})).catch(console.error).finally((()=>{i(e,!0),setTimeout((()=>{e.submitter.textContent="Save"}),1e3)})),o(e.submitter,t),e.target.reset(),e.preventDefault(),x(O)}(e)})),A.addEventListener("click",(()=>{var e,o;T.value=I.textContent,B.value=P.textContent,$(U),e=U,o=t,[T,B].forEach((t=>{r(e,t,o)}))})),z=t,Array.from(document.querySelectorAll(z.formSelector)).forEach((e=>{((e,t)=>{const o=Array.from(e.querySelectorAll(t.inputSelector)),s=e.querySelector(t.submitButtonSelector);n(o,s,t),o.forEach((a=>{a.addEventListener("input",(function(){n(o,s,t),((e,t,o)=>{t.validity.valid?r(e,t,o):((e,t,r,o)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r})(e,t,t.validationMessage,o)})(e,a,t)}))}))})(e,z)})),D.addEventListener("submit",(e=>{var r;r=e,f.editUserInfo({name:T.value,about:B.value}).then((e=>{I.textContent=e.name,P.textContent=e.about})).catch(console.error).finally((()=>{i(r,!0),setTimeout((()=>{r.submitter.textContent="Save"}),1e3)})),o(r.submitter,t),r.preventDefault(),x(U)}));const M=document.querySelector("#post-modal"),F=document.querySelector(".profile__post-btn"),G=(M.querySelector(".modal__close-btn"),M.querySelector(".modal__form")),K=M.querySelector("#image-link"),Q=M.querySelector("#caption");F.addEventListener("click",(()=>{$(M)})),G.addEventListener("submit",(e=>{!function(e){f.postNewCard({name:Q.value,link:K.value}).then((e=>{const t=g(e);q.prepend(t)})).catch(console.error).finally((()=>{i(e,!0),setTimeout((()=>{e.submitter.textContent="Save"}),1e3)})),o(e.submitter,t),e.target.reset(),e.preventDefault(),x(M)}(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,